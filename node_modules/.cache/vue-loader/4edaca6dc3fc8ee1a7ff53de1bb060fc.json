{"remainingRequest":"/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/src/components/Movie.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/src/components/Movie.vue","mtime":1576540018720},{"path":"/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Movie.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Movie.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-container v-if=\"loading\">\n        <div class=\"text-xs-center\">\n            <v-progress-circular\n                indeterminate\n                :size=\"150\"\n                :width=\"8\"\n                color=\"green\"\n            >\n            </v-progress-circular>\n        </div>\n    </v-container>\n\n    <v-container v-else>\n        <v-layout wrap>\n            <v-flex xs12 mr-1 ml-1>\n                <v-card>\n                    <v-img\n                        :src=\"posterImage(singleMovie)\"\n                        aspect-ratio=\"2\"\n                    ></v-img>\n                    <v-card-title primary-title>\n                        <div>\n                            <h2 class=\"headline mb-0\">\n                                {{ singleMovie.title }}\n                            </h2>\n                            <p>{{ singleMovie.release_date }}</p>\n                            <p>{{ singleMovie.overview }}</p>\n                            <h3>Runtime:</h3>\n                            {{ singleMovie.runtime }} minutes\n                            <h3>Genres:</h3>\n                            <ul\n                                v-for=\"(item, index) in movieGenres\"\n                                :key=\"index\"\n                            >\n                                <li>{{ item.name }}</li>\n                            </ul>\n                        </div>\n                    </v-card-title>\n                    <v-card-actions>\n                        <v-btn text color=\"green\" @click=\"back\">back</v-btn>\n                    </v-card-actions>\n                    <!--if the user logged in-->\n                    <div v-if=\"loggedIn\">\n                        <v-card-actions>\n                            <v-btn\n                                v-if=\"gottaWatched\"\n                                text\n                                color=\"green\"\n                                @click=\"removeGottaWatch\"\n                                >UnGottaWatch</v-btn\n                            >\n                            <v-btn\n                                v-else\n                                text\n                                color=\"green\"\n                                @click=\"addToGottaWatchList\"\n                                >GottaWatch</v-btn\n                            >\n                        </v-card-actions>\n                        <v-card-actions>\n                            <v-btn\n                                v-if=\"watched\"\n                                text\n                                color=\"green\"\n                                @click=\"removeWatched\"\n                                >UnWatched</v-btn\n                            >\n                            <v-btn\n                                v-else\n                                text\n                                color=\"green\"\n                                @click=\"addToWatchedList\"\n                                >Watched</v-btn\n                            >\n                        </v-card-actions>\n                    </div>\n                    <!--if the user did not log in-->\n                    <div v-else>\n                        <v-card-actions>\n                            <v-btn text color=\"green\">\n                                <!-- TODO: get tooltips to work -->\n                                <v-tooltip\n                                    light\n                                    content=\"Login to add this movie to your gotta watch list\"\n                                >\n                                    GottaWatch\n                                </v-tooltip>\n                            </v-btn>\n                        </v-card-actions>\n                        <v-card-actions>\n                            <v-btn text color=\"green\">\n                                <v-tooltip\n                                    light\n                                    content=\"Login to add this movie to your watched list\"\n                                >\n                                    Watched\n                                </v-tooltip>\n                            </v-btn>\n                        </v-card-actions>\n                    </div>\n                </v-card>\n            </v-flex>\n        </v-layout>\n    </v-container>\n</template>\n\n<script>\nimport movieApi from '@/MovieApi';\nimport { db } from '@/firebase';\nimport 'firebase/firestore';\nimport firebase from 'firebase/app';\n\nvar MovieList = function() {\n    return {\n        movie: null,\n        datetime: new Date(),\n        owner: '',\n        movieId: ''\n    };\n};\n\nexport default {\n    props: ['id'],\n\n    data() {\n        return {\n            user: this.$store.state.user.user,\n            singleMovie: '',\n            movieGenres: [],\n            gottaWatchList: [],\n            watchedList: [],\n            dialog: false,\n            loading: true,\n            ratings: ''\n        };\n    },\n    mounted() {\n        movieApi\n            .fetchSingleMovie(this.id)\n            .then(response => {\n                this.singleMovie = response;\n                this.ratings = this.singleMovie.vote_average;\n                this.movieGenres = this.singleMovie.genres;\n                this.loading = false;\n                this.fetchGottaWatchList();\n                this.fetchWatchedList();\n            })\n            .catch(error => {\n                // eslint-disable-next-line no-console\n                console.error('AJAX QUERY ERROR', error);\n            });\n    },\n\n    computed: {\n        loggedIn() {\n            return firebase.auth().currentUser != null;\n        },\n        loggedInListOwner() {\n            if (firebase.auth().currentUser) {\n                return this.gottaWatchList.find(function(list) {\n                    return list.owner === firebase.auth().currentUser.uid;\n                }, firebase.auth().currentUser);\n            }\n            return null;\n        },\n        isListOwner() {\n            if (this.loggedInListOwner) {\n                return true;\n            }\n\n            return false;\n        },\n        gottaWatched() {\n            return this.gottaWatchList.some(\n                movie => movie.movieId === this.singleMovie.id\n            );\n        },\n        watched() {\n            return this.watchedList.some(\n                movie => movie.movieId === this.singleMovie.id\n            );\n        }\n    },\n\n    methods: {\n        back() {\n            this.$router.push('/');\n        },\n\n        async fetchGottaWatchList() {\n            this.gottaWatchList = [];\n            var self = this;\n            // eslint-disable-next-line no-console\n            console.log(\n                this.gottaWatchList.some(\n                    movie => movie.movie.id === this.singleMovie.id\n                )\n            );\n            // eslint-disable-next-line no-console\n            console.log(this.gottaWatchList);\n            // load list from database to local\n            await db\n                .collection('popcornUsers')\n                .doc(this.user.uid)\n                .collection('gottaWatchList')\n                .orderBy('datetime')\n                .get()\n                .then(function(querySnapshot) {\n                    querySnapshot.forEach(function(doc) {\n                        // eslint-disable-next-line no-console\n                        self.gottaWatchList.push(doc.data());\n                    });\n                })\n                .catch(function(error) {\n                    // eslint-disable-next-line no-console\n                    console.log('Error getting documents: ', error);\n                });\n            // eslint-disable-next-line no-console\n            console.log(\n                self.gottaWatchList.some(\n                    movie => movie.movie.id === this.singleMovie.id\n                )\n            );\n            // eslint-disable-next-line no-console\n            console.log(self.gottaWatchList);\n        },\n\n        async fetchWatchedList() {\n            this.watchedList = [];\n            var self = this;\n            // load list from database to local\n            await db\n                .collection('popcornUsers')\n                .doc(this.user.uid)\n                .collection('watchedList')\n                .orderBy('datetime')\n                .get()\n                .then(function(querySnapshot) {\n                    querySnapshot.forEach(function(doc) {\n                        // eslint-disable-next-line no-console\n                        self.watchedList.push(doc.data());\n                    });\n                })\n                .catch(function(error) {\n                    // eslint-disable-next-line no-console\n                    console.log('Error getting documents: ', error);\n                });\n\n            // eslint-disable-next-line no-console\n            console.log(\n                this.watchedList.some(\n                    movie => movie.movie.id === this.singleMovie.id\n                )\n            );\n            // eslint-disable-next-line no-console\n            console.log(this.watchedList);\n        },\n\n        backToPopular() {\n            this.$router.push('/popular');\n        },\n\n        addToGottaWatchList() {\n            if (!this.gottaWatched) {\n                let gottaWatch = new MovieList();\n                gottaWatch.movie = this.singleMovie;\n                gottaWatch.owner = this.user.uid;\n                gottaWatch.movieId = this.singleMovie.id;\n                var self = this;\n                // add to sub collection\n                db.collection('popcornUsers')\n                    .doc(this.user.uid)\n                    .collection('gottaWatchList')\n                    .add(gottaWatch)\n                    .then(function() {\n                        alert('Added to Gotta Watch');\n                        self.backToPopular();\n                    })\n                    .catch(error => {\n                        alert('Failed to add');\n                        // eslint-disable-next-line no-console\n                        console.error('Failed to add movie', error);\n                    });\n\n                // add to the array\n                this.gottaWatchList.push(this.singleMovie);\n            }\n        },\n\n        removeGottaWatch() {\n            if (this.isListOwner) {\n                // eslint-disable-next-line no-console\n                console.log(this.singleMovie.id);\n                var self = this;\n                var deletequery = db\n                    .collection('popcornUsers')\n                    .doc(this.user.uid)\n                    .collection('gottaWatchList')\n                    .where('movieId', '==', this.singleMovie.id);\n                deletequery\n                    .get()\n                    .then(function(querySnapshot) {\n                        querySnapshot.forEach(function(doc) {\n                            doc.ref.delete();\n                            alert('UnGottaWatched!');\n                            self.backToPopular();\n                            self.addPoints(self.user.uid, 5);\n                            // eslint-disable-next-line no-console\n                            console.log('Deleted');\n                        });\n                    })\n                    .catch(function(error) {\n                        alert('Failed to UnGottaWatched');\n                        // eslint-disable-next-line no-console\n                        console.error('Failed: ', error);\n                    });\n            }\n        },\n\n        addToWatchedList() {\n            if (!this.watched) {\n                let watched = new MovieList();\n                watched.movie = this.singleMovie;\n                watched.owner = this.user.uid;\n                watched.movieId = this.singleMovie.id;\n                var self = this;\n                // add to sub collection\n                db.collection('popcornUsers')\n                    .doc(this.user.uid)\n                    .collection('watchedList')\n                    .add(watched)\n                    .then(function() {\n                        alert('Added to Watched');\n                        self.backToPopular();\n                        self.addPoints(self.user.uid, 10);\n                    })\n                    .catch(error => {\n                        alert('Failed to add');\n                        // eslint-disable-next-line no-console\n                        console.error('Failed to add movie', error);\n                    });\n\n                // add to the array\n                this.watchedList.push(this.singleMovie);\n            }\n        },\n\n        removeWatched() {\n            if (this.isListOwner) {\n                // eslint-disable-next-line no-console\n                console.log(this.singleMovie.id);\n                var self = this;\n                var deletequery = db\n                    .collection('popcornUsers')\n                    .doc(this.user.uid)\n                    .collection('watchedList')\n                    .where('movieId', '==', this.singleMovie.id);\n                deletequery\n                    .get()\n                    .then(function(querySnapshot) {\n                        querySnapshot.forEach(function(doc) {\n                            doc.ref.delete();\n                            alert('UnWatched!');\n                            self.backToPopular();\n                            // eslint-disable-next-line no-console\n                            console.log('Deleted');\n                        });\n                    })\n                    .catch(function(error) {\n                        alert('Failed to UnWatched');\n                        // eslint-disable-next-line no-console\n                        console.error('Failed: ', error);\n                    });\n            }\n        },\n\n        addPoints(userId, point) {\n            db.runTransaction(function(transaction) {\n                let docRef = db.collection('popcornBoard').doc(userId);\n\n                return transaction\n                    .get(docRef)\n                    .then(function(doc) {\n                        if (!doc.exists) {\n                            throw 'Document does not exist!';\n                        }\n\n                        // add score\n                        var newPoint = doc.data().points + point;\n                        transaction.update(docRef, { points: newPoint });\n                    })\n                    .then(function() {\n                        // eslint-disable-next-line no-console\n                        console.log('Points updated!');\n                        alert('Congratz! You earned ' + point + 'pts!');\n                    })\n                    .catch(function(error) {\n                        // eslint-disable-next-line no-console\n                        console.log('Transaction failed: ', error);\n                    });\n            });\n        },\n\n        posterImage(item) {\n            let baseImgUrl = 'https://image.tmdb.org/t/p/';\n            return baseImgUrl.concat('w154', item.poster_path);\n        }\n    }\n};\n</script>\n"]}]}