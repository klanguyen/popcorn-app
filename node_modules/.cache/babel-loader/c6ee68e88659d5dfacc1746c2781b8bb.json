{"remainingRequest":"/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/node_modules/babel-loader/lib/index.js!/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/src/components/Movie.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/src/components/Movie.vue","mtime":1576540018720},{"path":"/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/trinhnguyen/Desktop/popcorn-project/popcorn-app-final/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Movie.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-container v-if=\"loading\">\n        <div class=\"text-xs-center\">\n            <v-progress-circular\n                indeterminate\n                :size=\"150\"\n                :width=\"8\"\n                color=\"green\"\n            >\n            </v-progress-circular>\n        </div>\n    </v-container>\n\n    <v-container v-else>\n        <v-layout wrap>\n            <v-flex xs12 mr-1 ml-1>\n                <v-card>\n                    <v-img\n                        :src=\"posterImage(singleMovie)\"\n                        aspect-ratio=\"2\"\n                    ></v-img>\n                    <v-card-title primary-title>\n                        <div>\n                            <h2 class=\"headline mb-0\">\n                                {{ singleMovie.title }}\n                            </h2>\n                            <p>{{ singleMovie.release_date }}</p>\n                            <p>{{ singleMovie.overview }}</p>\n                            <h3>Runtime:</h3>\n                            {{ singleMovie.runtime }} minutes\n                            <h3>Genres:</h3>\n                            <ul\n                                v-for=\"(item, index) in movieGenres\"\n                                :key=\"index\"\n                            >\n                                <li>{{ item.name }}</li>\n                            </ul>\n                        </div>\n                    </v-card-title>\n                    <v-card-actions>\n                        <v-btn text color=\"green\" @click=\"back\">back</v-btn>\n                    </v-card-actions>\n                    <!--if the user logged in-->\n                    <div v-if=\"loggedIn\">\n                        <v-card-actions>\n                            <v-btn\n                                v-if=\"gottaWatched\"\n                                text\n                                color=\"green\"\n                                @click=\"removeGottaWatch\"\n                                >UnGottaWatch</v-btn\n                            >\n                            <v-btn\n                                v-else\n                                text\n                                color=\"green\"\n                                @click=\"addToGottaWatchList\"\n                                >GottaWatch</v-btn\n                            >\n                        </v-card-actions>\n                        <v-card-actions>\n                            <v-btn\n                                v-if=\"watched\"\n                                text\n                                color=\"green\"\n                                @click=\"removeWatched\"\n                                >UnWatched</v-btn\n                            >\n                            <v-btn\n                                v-else\n                                text\n                                color=\"green\"\n                                @click=\"addToWatchedList\"\n                                >Watched</v-btn\n                            >\n                        </v-card-actions>\n                    </div>\n                    <!--if the user did not log in-->\n                    <div v-else>\n                        <v-card-actions>\n                            <v-btn text color=\"green\">\n                                <!-- TODO: get tooltips to work -->\n                                <v-tooltip\n                                    light\n                                    content=\"Login to add this movie to your gotta watch list\"\n                                >\n                                    GottaWatch\n                                </v-tooltip>\n                            </v-btn>\n                        </v-card-actions>\n                        <v-card-actions>\n                            <v-btn text color=\"green\">\n                                <v-tooltip\n                                    light\n                                    content=\"Login to add this movie to your watched list\"\n                                >\n                                    Watched\n                                </v-tooltip>\n                            </v-btn>\n                        </v-card-actions>\n                    </div>\n                </v-card>\n            </v-flex>\n        </v-layout>\n    </v-container>\n</template>\n\n<script>\nimport movieApi from '@/MovieApi';\nimport { db } from '@/firebase';\nimport 'firebase/firestore';\nimport firebase from 'firebase/app';\n\nvar MovieList = function() {\n    return {\n        movie: null,\n        datetime: new Date(),\n        owner: '',\n        movieId: ''\n    };\n};\n\nexport default {\n    props: ['id'],\n\n    data() {\n        return {\n            user: this.$store.state.user.user,\n            singleMovie: '',\n            movieGenres: [],\n            gottaWatchList: [],\n            watchedList: [],\n            dialog: false,\n            loading: true,\n            ratings: ''\n        };\n    },\n    mounted() {\n        movieApi\n            .fetchSingleMovie(this.id)\n            .then(response => {\n                this.singleMovie = response;\n                this.ratings = this.singleMovie.vote_average;\n                this.movieGenres = this.singleMovie.genres;\n                this.loading = false;\n                this.fetchGottaWatchList();\n                this.fetchWatchedList();\n            })\n            .catch(error => {\n                // eslint-disable-next-line no-console\n                console.error('AJAX QUERY ERROR', error);\n            });\n    },\n\n    computed: {\n        loggedIn() {\n            return firebase.auth().currentUser != null;\n        },\n        loggedInListOwner() {\n            if (firebase.auth().currentUser) {\n                return this.gottaWatchList.find(function(list) {\n                    return list.owner === firebase.auth().currentUser.uid;\n                }, firebase.auth().currentUser);\n            }\n            return null;\n        },\n        isListOwner() {\n            if (this.loggedInListOwner) {\n                return true;\n            }\n\n            return false;\n        },\n        gottaWatched() {\n            return this.gottaWatchList.some(\n                movie => movie.movieId === this.singleMovie.id\n            );\n        },\n        watched() {\n            return this.watchedList.some(\n                movie => movie.movieId === this.singleMovie.id\n            );\n        }\n    },\n\n    methods: {\n        back() {\n            this.$router.push('/');\n        },\n\n        async fetchGottaWatchList() {\n            this.gottaWatchList = [];\n            var self = this;\n            // eslint-disable-next-line no-console\n            console.log(\n                this.gottaWatchList.some(\n                    movie => movie.movie.id === this.singleMovie.id\n                )\n            );\n            // eslint-disable-next-line no-console\n            console.log(this.gottaWatchList);\n            // load list from database to local\n            await db\n                .collection('popcornUsers')\n                .doc(this.user.uid)\n                .collection('gottaWatchList')\n                .orderBy('datetime')\n                .get()\n                .then(function(querySnapshot) {\n                    querySnapshot.forEach(function(doc) {\n                        // eslint-disable-next-line no-console\n                        self.gottaWatchList.push(doc.data());\n                    });\n                })\n                .catch(function(error) {\n                    // eslint-disable-next-line no-console\n                    console.log('Error getting documents: ', error);\n                });\n            // eslint-disable-next-line no-console\n            console.log(\n                self.gottaWatchList.some(\n                    movie => movie.movie.id === this.singleMovie.id\n                )\n            );\n            // eslint-disable-next-line no-console\n            console.log(self.gottaWatchList);\n        },\n\n        async fetchWatchedList() {\n            this.watchedList = [];\n            var self = this;\n            // load list from database to local\n            await db\n                .collection('popcornUsers')\n                .doc(this.user.uid)\n                .collection('watchedList')\n                .orderBy('datetime')\n                .get()\n                .then(function(querySnapshot) {\n                    querySnapshot.forEach(function(doc) {\n                        // eslint-disable-next-line no-console\n                        self.watchedList.push(doc.data());\n                    });\n                })\n                .catch(function(error) {\n                    // eslint-disable-next-line no-console\n                    console.log('Error getting documents: ', error);\n                });\n\n            // eslint-disable-next-line no-console\n            console.log(\n                this.watchedList.some(\n                    movie => movie.movie.id === this.singleMovie.id\n                )\n            );\n            // eslint-disable-next-line no-console\n            console.log(this.watchedList);\n        },\n\n        backToPopular() {\n            this.$router.push('/popular');\n        },\n\n        addToGottaWatchList() {\n            if (!this.gottaWatched) {\n                let gottaWatch = new MovieList();\n                gottaWatch.movie = this.singleMovie;\n                gottaWatch.owner = this.user.uid;\n                gottaWatch.movieId = this.singleMovie.id;\n                var self = this;\n                // add to sub collection\n                db.collection('popcornUsers')\n                    .doc(this.user.uid)\n                    .collection('gottaWatchList')\n                    .add(gottaWatch)\n                    .then(function() {\n                        alert('Added to Gotta Watch');\n                        self.backToPopular();\n                    })\n                    .catch(error => {\n                        alert('Failed to add');\n                        // eslint-disable-next-line no-console\n                        console.error('Failed to add movie', error);\n                    });\n\n                // add to the array\n                this.gottaWatchList.push(this.singleMovie);\n            }\n        },\n\n        removeGottaWatch() {\n            if (this.isListOwner) {\n                // eslint-disable-next-line no-console\n                console.log(this.singleMovie.id);\n                var self = this;\n                var deletequery = db\n                    .collection('popcornUsers')\n                    .doc(this.user.uid)\n                    .collection('gottaWatchList')\n                    .where('movieId', '==', this.singleMovie.id);\n                deletequery\n                    .get()\n                    .then(function(querySnapshot) {\n                        querySnapshot.forEach(function(doc) {\n                            doc.ref.delete();\n                            alert('UnGottaWatched!');\n                            self.backToPopular();\n                            self.addPoints(self.user.uid, 5);\n                            // eslint-disable-next-line no-console\n                            console.log('Deleted');\n                        });\n                    })\n                    .catch(function(error) {\n                        alert('Failed to UnGottaWatched');\n                        // eslint-disable-next-line no-console\n                        console.error('Failed: ', error);\n                    });\n            }\n        },\n\n        addToWatchedList() {\n            if (!this.watched) {\n                let watched = new MovieList();\n                watched.movie = this.singleMovie;\n                watched.owner = this.user.uid;\n                watched.movieId = this.singleMovie.id;\n                var self = this;\n                // add to sub collection\n                db.collection('popcornUsers')\n                    .doc(this.user.uid)\n                    .collection('watchedList')\n                    .add(watched)\n                    .then(function() {\n                        alert('Added to Watched');\n                        self.backToPopular();\n                        self.addPoints(self.user.uid, 10);\n                    })\n                    .catch(error => {\n                        alert('Failed to add');\n                        // eslint-disable-next-line no-console\n                        console.error('Failed to add movie', error);\n                    });\n\n                // add to the array\n                this.watchedList.push(this.singleMovie);\n            }\n        },\n\n        removeWatched() {\n            if (this.isListOwner) {\n                // eslint-disable-next-line no-console\n                console.log(this.singleMovie.id);\n                var self = this;\n                var deletequery = db\n                    .collection('popcornUsers')\n                    .doc(this.user.uid)\n                    .collection('watchedList')\n                    .where('movieId', '==', this.singleMovie.id);\n                deletequery\n                    .get()\n                    .then(function(querySnapshot) {\n                        querySnapshot.forEach(function(doc) {\n                            doc.ref.delete();\n                            alert('UnWatched!');\n                            self.backToPopular();\n                            // eslint-disable-next-line no-console\n                            console.log('Deleted');\n                        });\n                    })\n                    .catch(function(error) {\n                        alert('Failed to UnWatched');\n                        // eslint-disable-next-line no-console\n                        console.error('Failed: ', error);\n                    });\n            }\n        },\n\n        addPoints(userId, point) {\n            db.runTransaction(function(transaction) {\n                let docRef = db.collection('popcornBoard').doc(userId);\n\n                return transaction\n                    .get(docRef)\n                    .then(function(doc) {\n                        if (!doc.exists) {\n                            throw 'Document does not exist!';\n                        }\n\n                        // add score\n                        var newPoint = doc.data().points + point;\n                        transaction.update(docRef, { points: newPoint });\n                    })\n                    .then(function() {\n                        // eslint-disable-next-line no-console\n                        console.log('Points updated!');\n                        alert('Congratz! You earned ' + point + 'pts!');\n                    })\n                    .catch(function(error) {\n                        // eslint-disable-next-line no-console\n                        console.log('Transaction failed: ', error);\n                    });\n            });\n        },\n\n        posterImage(item) {\n            let baseImgUrl = 'https://image.tmdb.org/t/p/';\n            return baseImgUrl.concat('w154', item.poster_path);\n        }\n    }\n};\n</script>\n"],"sourceRoot":"src/components"}]}